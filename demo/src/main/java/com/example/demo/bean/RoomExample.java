package com.example.demo.bean;

import java.util.ArrayList;
import java.util.List;

public class RoomExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table room
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public RoomExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table room
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRidIsNull() {
            addCriterion("rid is null");
            return (Criteria) this;
        }

        public Criteria andRidIsNotNull() {
            addCriterion("rid is not null");
            return (Criteria) this;
        }

        public Criteria andRidEqualTo(Integer value) {
            addCriterion("rid =", value, "rid");
            return (Criteria) this;
        }

        public Criteria andRidNotEqualTo(Integer value) {
            addCriterion("rid <>", value, "rid");
            return (Criteria) this;
        }

        public Criteria andRidGreaterThan(Integer value) {
            addCriterion("rid >", value, "rid");
            return (Criteria) this;
        }

        public Criteria andRidGreaterThanOrEqualTo(Integer value) {
            addCriterion("rid >=", value, "rid");
            return (Criteria) this;
        }

        public Criteria andRidLessThan(Integer value) {
            addCriterion("rid <", value, "rid");
            return (Criteria) this;
        }

        public Criteria andRidLessThanOrEqualTo(Integer value) {
            addCriterion("rid <=", value, "rid");
            return (Criteria) this;
        }

        public Criteria andRidIn(List<Integer> values) {
            addCriterion("rid in", values, "rid");
            return (Criteria) this;
        }

        public Criteria andRidNotIn(List<Integer> values) {
            addCriterion("rid not in", values, "rid");
            return (Criteria) this;
        }

        public Criteria andRidBetween(Integer value1, Integer value2) {
            addCriterion("rid between", value1, value2, "rid");
            return (Criteria) this;
        }

        public Criteria andRidNotBetween(Integer value1, Integer value2) {
            addCriterion("rid not between", value1, value2, "rid");
            return (Criteria) this;
        }

        public Criteria andRtypeIsNull() {
            addCriterion("rtype is null");
            return (Criteria) this;
        }

        public Criteria andRtypeIsNotNull() {
            addCriterion("rtype is not null");
            return (Criteria) this;
        }

        public Criteria andRtypeEqualTo(String value) {
            addCriterion("rtype =", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeNotEqualTo(String value) {
            addCriterion("rtype <>", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeGreaterThan(String value) {
            addCriterion("rtype >", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeGreaterThanOrEqualTo(String value) {
            addCriterion("rtype >=", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeLessThan(String value) {
            addCriterion("rtype <", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeLessThanOrEqualTo(String value) {
            addCriterion("rtype <=", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeLike(String value) {
            addCriterion("rtype like", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeNotLike(String value) {
            addCriterion("rtype not like", value, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeIn(List<String> values) {
            addCriterion("rtype in", values, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeNotIn(List<String> values) {
            addCriterion("rtype not in", values, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeBetween(String value1, String value2) {
            addCriterion("rtype between", value1, value2, "rtype");
            return (Criteria) this;
        }

        public Criteria andRtypeNotBetween(String value1, String value2) {
            addCriterion("rtype not between", value1, value2, "rtype");
            return (Criteria) this;
        }

        public Criteria andRaddressIsNull() {
            addCriterion("raddress is null");
            return (Criteria) this;
        }

        public Criteria andRaddressIsNotNull() {
            addCriterion("raddress is not null");
            return (Criteria) this;
        }

        public Criteria andRaddressEqualTo(String value) {
            addCriterion("raddress =", value, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressNotEqualTo(String value) {
            addCriterion("raddress <>", value, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressGreaterThan(String value) {
            addCriterion("raddress >", value, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressGreaterThanOrEqualTo(String value) {
            addCriterion("raddress >=", value, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressLessThan(String value) {
            addCriterion("raddress <", value, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressLessThanOrEqualTo(String value) {
            addCriterion("raddress <=", value, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressLike(String value) {
            addCriterion("raddress like", value, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressNotLike(String value) {
            addCriterion("raddress not like", value, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressIn(List<String> values) {
            addCriterion("raddress in", values, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressNotIn(List<String> values) {
            addCriterion("raddress not in", values, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressBetween(String value1, String value2) {
            addCriterion("raddress between", value1, value2, "raddress");
            return (Criteria) this;
        }

        public Criteria andRaddressNotBetween(String value1, String value2) {
            addCriterion("raddress not between", value1, value2, "raddress");
            return (Criteria) this;
        }

        public Criteria andRpriceIsNull() {
            addCriterion("rprice is null");
            return (Criteria) this;
        }

        public Criteria andRpriceIsNotNull() {
            addCriterion("rprice is not null");
            return (Criteria) this;
        }

        public Criteria andRpriceEqualTo(Integer value) {
            addCriterion("rprice =", value, "rprice");
            return (Criteria) this;
        }

        public Criteria andRpriceNotEqualTo(Integer value) {
            addCriterion("rprice <>", value, "rprice");
            return (Criteria) this;
        }

        public Criteria andRpriceGreaterThan(Integer value) {
            addCriterion("rprice >", value, "rprice");
            return (Criteria) this;
        }

        public Criteria andRpriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("rprice >=", value, "rprice");
            return (Criteria) this;
        }

        public Criteria andRpriceLessThan(Integer value) {
            addCriterion("rprice <", value, "rprice");
            return (Criteria) this;
        }

        public Criteria andRpriceLessThanOrEqualTo(Integer value) {
            addCriterion("rprice <=", value, "rprice");
            return (Criteria) this;
        }

        public Criteria andRpriceIn(List<Integer> values) {
            addCriterion("rprice in", values, "rprice");
            return (Criteria) this;
        }

        public Criteria andRpriceNotIn(List<Integer> values) {
            addCriterion("rprice not in", values, "rprice");
            return (Criteria) this;
        }

        public Criteria andRpriceBetween(Integer value1, Integer value2) {
            addCriterion("rprice between", value1, value2, "rprice");
            return (Criteria) this;
        }

        public Criteria andRpriceNotBetween(Integer value1, Integer value2) {
            addCriterion("rprice not between", value1, value2, "rprice");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andRimageIsNull() {
            addCriterion("rimage is null");
            return (Criteria) this;
        }

        public Criteria andRimageIsNotNull() {
            addCriterion("rimage is not null");
            return (Criteria) this;
        }

        public Criteria andRimageEqualTo(String value) {
            addCriterion("rimage =", value, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageNotEqualTo(String value) {
            addCriterion("rimage <>", value, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageGreaterThan(String value) {
            addCriterion("rimage >", value, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageGreaterThanOrEqualTo(String value) {
            addCriterion("rimage >=", value, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageLessThan(String value) {
            addCriterion("rimage <", value, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageLessThanOrEqualTo(String value) {
            addCriterion("rimage <=", value, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageLike(String value) {
            addCriterion("rimage like", value, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageNotLike(String value) {
            addCriterion("rimage not like", value, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageIn(List<String> values) {
            addCriterion("rimage in", values, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageNotIn(List<String> values) {
            addCriterion("rimage not in", values, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageBetween(String value1, String value2) {
            addCriterion("rimage between", value1, value2, "rimage");
            return (Criteria) this;
        }

        public Criteria andRimageNotBetween(String value1, String value2) {
            addCriterion("rimage not between", value1, value2, "rimage");
            return (Criteria) this;
        }

        public Criteria andCertificateidIsNull() {
            addCriterion("certificateid is null");
            return (Criteria) this;
        }

        public Criteria andCertificateidIsNotNull() {
            addCriterion("certificateid is not null");
            return (Criteria) this;
        }

        public Criteria andCertificateidEqualTo(String value) {
            addCriterion("certificateid =", value, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidNotEqualTo(String value) {
            addCriterion("certificateid <>", value, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidGreaterThan(String value) {
            addCriterion("certificateid >", value, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidGreaterThanOrEqualTo(String value) {
            addCriterion("certificateid >=", value, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidLessThan(String value) {
            addCriterion("certificateid <", value, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidLessThanOrEqualTo(String value) {
            addCriterion("certificateid <=", value, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidLike(String value) {
            addCriterion("certificateid like", value, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidNotLike(String value) {
            addCriterion("certificateid not like", value, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidIn(List<String> values) {
            addCriterion("certificateid in", values, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidNotIn(List<String> values) {
            addCriterion("certificateid not in", values, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidBetween(String value1, String value2) {
            addCriterion("certificateid between", value1, value2, "certificateid");
            return (Criteria) this;
        }

        public Criteria andCertificateidNotBetween(String value1, String value2) {
            addCriterion("certificateid not between", value1, value2, "certificateid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table room
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}